// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:

    DMux8Way(in=true, sel=address[0..2], a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7);
    And(a=r0, b=load, out=w0);
    And(a=r1, b=load, out=w1);
    And(a=r2, b=load, out=w2);
    And(a=r3, b=load, out=w3);
    And(a=r4, b=load, out=w4);
    And(a=r5, b=load, out=w5);
    And(a=r6, b=load, out=w6);
    And(a=r7, b=load, out=w7);

    RAM64(in=in, load=w0, address=address[3..8], out=out0);
    RAM64(in=in, load=w1, address=address[3..8], out=out1);
    RAM64(in=in, load=w2, address=address[3..8], out=out2);
    RAM64(in=in, load=w3, address=address[3..8], out=out3);
    RAM64(in=in, load=w4, address=address[3..8], out=out4);
    RAM64(in=in, load=w5, address=address[3..8], out=out5);
    RAM64(in=in, load=w6, address=address[3..8], out=out6);
    RAM64(in=in, load=w7, address=address[3..8], out=out7);

    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[0..2], out=out);
}
