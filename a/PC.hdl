// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    // Handle incrementing
    Inc16(in=state, out=stateInc);
    Mux16(a=state, b=stateInc, sel=inc, out=maybeInc);

    // Handle setting via load bit
    Mux16(a=maybeInc, b=in, sel=load, out=maybeSet);

    // Handle resetting via reset bit
    Mux16(a=true, b=false, sel=reset, out=resetBus);
    And16(a=maybeSet, b=resetBus, out=maybeReset);

    // only set load bit if there was some mutating only bit set.
    // OTHERWISE, `in` could be set, mutating the Bit state incorrectly.
    Or(a=reset, b=load, out=wasResetOrLoad);
    Or(a=wasResetOrLoad, b=inc, out=wasChanged);

    Register(in=maybeReset, load=wasChanged, out=out, out=state);
}
